version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sambatv2025
      POSTGRES_DB: sambatv_ai_platform
    ports:
      - "5432:5432"
    volumes:
      - sambatv_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: always
    command: --requirepass sambatv_redis_2025
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio
    restart: always
    entrypoint: sh
    command: -c 'mkdir -p /data/sambatv && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: sambatv
      MINIO_ROOT_PASSWORD: sambatv_minio_2025
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - sambatv_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5

  # ClickHouse Analytics
  clickhouse:
    image: clickhouse/clickhouse-server:24.3
    restart: always
    user: "101:101"
    environment:
      CLICKHOUSE_DB: sambatv_analytics
      CLICKHOUSE_USER: sambatv
      CLICKHOUSE_PASSWORD: sambatv_clickhouse_2025
    ports:
      - "8123:8123"
      - "9002:9000"
    volumes:
      - sambatv_clickhouse_data:/var/lib/clickhouse
      - sambatv_clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  # SambaTV AI Platform Worker (Background jobs)
  sambatv-worker:
    image: langfuse/langfuse-worker:3
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment: &worker-env
      # Database
      DATABASE_URL: postgresql://postgres:sambatv2025@postgres:5432/sambatv_ai_platform
      
      # Security
      SALT: "sambatv-salt-2025-secure"
      ENCRYPTION_KEY: "0000000000000000000000000000000000000000000000000000000000000000" # Generate with: openssl rand -hex 32
      
      # ClickHouse Analytics (corrected URL format)
      CLICKHOUSE_URL: "clickhouse://sambatv:sambatv_clickhouse_2025@clickhouse:9000/sambatv_analytics"
      CLICKHOUSE_USER: sambatv
      CLICKHOUSE_PASSWORD: sambatv_clickhouse_2025
      
      # Redis Cache
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: sambatv_redis_2025
      
      # S3 Storage (MinIO)
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: sambatv
      LANGFUSE_S3_EVENT_UPLOAD_REGION: us-east-1
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: sambatv
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: sambatv_minio_2025
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      
      # Features
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: "true"
      TELEMETRY_ENABLED: "false"

  # SambaTV AI Platform Web Application
  sambatv-ai-platform:
    image: langfuse/langfuse:3
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    ports:
      - "3004:3000"  # Access at http://localhost:3004
    environment:
      <<: *worker-env
      
      # Authentication
      NEXTAUTH_URL: http://localhost:3004
      NEXTAUTH_SECRET: "sambatv-nextauth-secret-2025-secure" # Change in production
      
      # Google OAuth (for @samba.tv domain)
      AUTH_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      AUTH_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      AUTH_GOOGLE_ALLOW_ACCOUNT_LINKING: "false"
      
      # Email Configuration (optional)
      EMAIL_FROM_ADDRESS: "ai-platform@samba.tv"
      SMTP_CONNECTION_URL: ${SMTP_CONNECTION_URL:-}
      
      # SambaTV Branding Customization
      NEXT_PUBLIC_APP_NAME: "SambaTV AI Platform"
      NEXT_PUBLIC_PRIMARY_COLOR: "#E50914"  # SambaTV Red
      NEXT_PUBLIC_LOGO_TEXT: "SambaTV AI Platform"
      
      # Model Configuration
      LANGFUSE_DEFAULT_MODEL_NAME: "claude-3-5-sonnet"
      
      # Organization Setup
      LANGFUSE_INIT_ORG_ID: "sambatv"
      LANGFUSE_INIT_ORG_NAME: "SambaTV"
      LANGFUSE_INIT_PROJECT_ID: "default"
      LANGFUSE_INIT_PROJECT_NAME: "SambaTV Prompts"
      
      # Admin User (optional - for initial setup)
      LANGFUSE_INIT_USER_EMAIL: ${ADMIN_EMAIL:-admin@samba.tv}
      LANGFUSE_INIT_USER_NAME: ${ADMIN_NAME:-Admin}
      LANGFUSE_INIT_USER_PASSWORD: ${ADMIN_PASSWORD:-changeme}

  # Optional: Database Admin UI
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@samba.tv
      PGADMIN_DEFAULT_PASSWORD: pgadmin2025
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - sambatv_pgadmin_data:/var/lib/pgadmin

volumes:
  sambatv_postgres_data:
  sambatv_clickhouse_data:
  sambatv_clickhouse_logs:
  sambatv_minio_data:
  sambatv_pgadmin_data:

networks:
  default:
    name: sambatv-ai-network