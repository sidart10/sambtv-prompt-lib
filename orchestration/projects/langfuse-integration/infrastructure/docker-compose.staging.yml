version: '3.8'

# Staging Deployment Configuration
# Uses existing infrastructure + pre-built Langfuse image

services:
  # Use official Langfuse image (v2 stable)
  langfuse:
    image: langfuse/langfuse:2
    container_name: sambatv-ai-platform-staging
    env_file:
      - .env.staging
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://langfuse:${POSTGRES_PASSWORD:-staging_secure_password_changeme}@postgres:5432/langfuse
      DIRECT_URL: postgresql://langfuse:${POSTGRES_PASSWORD:-staging_secure_password_changeme}@postgres:5432/langfuse
      
      # Redis Configuration
      REDIS_CONNECTION_STRING: redis://:${REDIS_PASSWORD:-staging_redis_password_changeme}@redis:6379/0
      
      # Authentication
      NEXTAUTH_URL: https://staging-ai.sambatv.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      AUTH_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      AUTH_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      AUTH_GOOGLE_ALLOWED_DOMAINS: samba.tv
      
      # AI Providers
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENROUTER_API_KEY}
      
      # S3 Storage
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: ${MINIO_ROOT_USER:-minio_admin}
      S3_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:-staging_minio_password_changeme}
      S3_BUCKET_NAME: langfuse-uploads
      S3_REGION: us-east-1
      
      # Application Settings
      HOSTNAME: "0.0.0.0"
      PORT: 3000
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
      
      # Langfuse Settings
      LANGFUSE_INIT_ORG_ID: sambatv
      LANGFUSE_INIT_ORG_NAME: "SambaTV"
      LANGFUSE_INIT_PROJECT_ID: default
      LANGFUSE_INIT_PROJECT_NAME: "Default Project"
      
      # Feature Flags
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: false
      NEXT_PUBLIC_SIGN_UP_DISABLED: false
      AUTH_DISABLE_USERNAME_PASSWORD: true
      
      # Disable telemetry
      LANGFUSE_TELEMETRY_ENABLED: false
      
      # Disable ClickHouse requirement
      CLICKHOUSE_MIGRATION_CONFIRM: true
      
      # Force database reset
      DATABASE_RESET: true
      
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - langfuse-network

  # Langfuse Worker
  langfuse-worker:
    image: langfuse/langfuse:2
    container_name: sambatv-worker-staging
    command: ["node", "worker/dist/src/index.js"]
    env_file:
      - .env.staging
    environment:
      DATABASE_URL: postgresql://langfuse:${POSTGRES_PASSWORD:-staging_secure_password_changeme}@postgres:5432/langfuse
      DIRECT_URL: postgresql://langfuse:${POSTGRES_PASSWORD:-staging_secure_password_changeme}@postgres:5432/langfuse
      REDIS_CONNECTION_STRING: redis://:${REDIS_PASSWORD:-staging_redis_password_changeme}@redis:6379/0
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - langfuse-network

networks:
  langfuse-network:
    external: true